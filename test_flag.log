1                                                          The SAS System                                14:34 Friday, March 6, 2015

NOTE: Copyright (c) 2002-2008 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.2 (TS2M3) 
      Licensed to DEPAUL UNIVERSITY-T&R, Site 70072056.
NOTE: This session is executing on the Linux 2.6.18-371.9.1.el5 (LIN X64) platform.



You are running SAS 9. Some SAS 8 files will be automatically converted 
by the V9 engine; others are incompatible.  Please see 
http://support.sas.com/rnd/migration/planning/platform/64bit.html

PROC MIGRATE will preserve current SAS file attributes and is 
recommended for converting all your SAS libraries from any 
SAS 8 release to SAS 9.  For details and examples, please see
http://support.sas.com/rnd/migration/index.html


This message is contained in the SAS news file, and is presented upon
initialization.  Edit the file "news" in the "misc/base" directory to
display site-specific news and information in the program log.
The command line option "-nonews" will prevent this display.




NOTE: SAS initialization used:
      real time           0.03 seconds
      cpu time            0.02 seconds
      
1          option compress =yes;
2          %LET txtds = ./;
3          libname f './';
NOTE: Libref F was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: /home/yzhang96/TITLE
3        !                
4          
5          *** read dictionary ***;
6          %macro dict();
7          data f.dict;
8          infile "./Dict_TITLE_New.txt" dsd truncover firstobs=2 dlm='09'x lrecl=99999999;
9          input Level: $1. Field: $50. Length: best12. Variable: $24. var_idx: best12.;
10         run;
11         *** assign macro variables for looping in macro function ***;
12         data _NULL_;
13         set f.dict(where=(level^=''));
14         call symputx("maxvar", _N_);
15         if level='H' then do; call symputx("maxh", var_idx); end;
16         if level='R' then do; call symputx("maxr", var_idx); end;
17         if level='I' then do; call symputx("maxi", var_idx); end;
18         if level='M' then do; call symputx("maxm", var_idx); end;
19         if level='P' then do; call symputx("maxp", var_idx); end;
20         if level='A' then do; call symputx("maxa", var_idx); end;
21         if level='L' then do; call symputx("maxl", var_idx); end;
22         if level='N' then do; call symputx("maxn", var_idx); end;
23         if level='T' then do; call symputx("maxt", var_idx); end;
24         call symput(cats("var",_N_), compress(Variable));
25         call symput(cats("tmpvar",_N_), cats(lowcase(level),"var",var_idx));
2                                                          The SAS System                                14:34 Friday, March 6, 2015

26         call symput(cats("fmt",_N_), cats("$",Length,"."));
27         run;
28         
29         %put ~~~ maxvar: &maxvar. ~~~;
30         %put ~~~ maxh: &maxh. ~~~;
31         %put ~~~ maxr: &maxr. ~~~;
32         %put ~~~ maxi: &maxi. ~~~;
33         %put ~~~ maxm: &maxm. ~~~;
34         %put ~~~ maxp: &maxp. ~~~;
35         %put ~~~ maxa: &maxa. ~~~;
36         %put ~~~ maxl: &maxl. ~~~;
37         %put ~~~ maxn: &maxn. ~~~;
38         %put ~~~ maxt: &maxt. ~~~;
39         
40         
41         %mend dict;
42         %dict();

NOTE: The infile "./Dict_TITLE_New.txt" is:
      Filename=/home/yzhang96/TITLE/Dict_TITLE_New.txt,
      Owner Name=yzhang96,Group Name=domain^users,
      Access Permission=rwxr-xr-x,
      Last Modified=Fri Mar  6 14:33:25 2015,
      File Size (bytes)=6538

NOTE: 180 records were read from the infile "./Dict_TITLE_New.txt".
      The minimum record length was 16.
      The maximum record length was 74.
NOTE: The data set F.DICT has 180 observations and 5 variables.
NOTE: Compressing data set F.DICT decreased size by 0.00 percent. 
      Compressed is 3 pages; un-compressed would require 3 pages.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 179 observations read from the data set F.DICT.
      WHERE level not = ' ';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

~~~ maxvar: 179 ~~~
~~~ maxh: 64 ~~~
~~~ maxr: 8 ~~~
~~~ maxi: 16 ~~~
~~~ maxm: 17 ~~~
~~~ maxp: 17 ~~~
~~~ maxa: 2 ~~~
~~~ maxl: 49 ~~~
~~~ maxn: 2 ~~~
~~~ maxt: 4 ~~~
43         
44         
45         
46         
3                                                          The SAS System                                14:34 Friday, March 6, 2015

47         %macro import_single(filein, fileout=, default_over=truncover, default_dlm='7C'x, default_maxlen=6000);
48         	*** set default output dataset name ***;
49         	%if &fileout= %then %do;
50         		%let fileout = %sysfunc(cats(sasds., %scan(%scan(&filein.,-1,/),1,.)));
51         	%end;
52         
53         	*** read nobs from Batch Head ***;
54         	data ds_0;
55         	infile "&filein." dsd &default_over. lrecl=99999999 dlm=&default_dlm. obs=1;
56         	input level: $1. Doc_Identifier: $1. FIPS: $5. Batch_Date: $8. Rec_Count: $9. Time_From: $23. Time_To: $23.;
57         	call symputx("obsnum", rec_count*1-1);
58         	call symput('dt_batch', Batch_Date);
59         	run;
60         	%put ~~~ Obs Number from Batch Header: &obsnum ~~~;
61         
62         
63         	*** clean dirty value that splits into multiple lines ***;
64         	data ds_1;
65         	infile "&filein." &default_over. lrecl=99999999 firstobs=2;
66         	input raw_all $&default_maxlen..;
67         	*** 四个变量: raw_all原始数据（默认最大长度6000）, obs_tmp编号, level_tmp种类,
67       ! flag_tmp标记成一块一块的;
68         	raw_all = compress(raw_all,&default_dlm.,'kw');
69         	obs_tmp = _N_;
70         	level_tmp = substr(raw_all,1,1);:
71         	if (level_tmp='H' | level_tmp='R' | level_tmp='I' | level_tmp='M' | level_tmp='P' | level_tmp='A' 
72         		| level_tmp='L' | level_tmp='N' | level_tmp='T') & substr(raw_all,2,1)=&default_dlm. then flag_tmp=0;
73         	else flag_tmp++1;
74         	run;
75         
76         	data f.ds_1;
77         	set ds_1;
78         	run;
79         	*** Variable, max,;
80         	proc means data=ds_1 noprint; var flag_tmp; output out=ds_tmp max=max; run;
81         	data f.ds_tmp; set ds_tmp; run;
82         	data _NULL_;
83         	set ds_tmp;
84         	call symputx('max_flag',max);
85         	run;
86         	%put ~~~ max_flag = &max_flag ~~~;
87         
88         	%if &max_flag. >= 1 %then %do;
89         		%do i = 0 %to &max_flag.;
90         			data ds_tmp&i.;
91         			set ds_1(where=(flag_tmp=&i.));
92         			id_tmp = obs_tmp - flag_tmp;
93         			keep raw_all id_tmp;
94         			rename raw_all = raw_&i.;
95         			run;
96         		%end;
97         		
98         		data ds_2;
99         		merge ds_tmp0 - ds_tmp&max_flag.;
100        		by id_tmp;
101        		format raw_all $&default_maxlen..;
102        		raw_all = cats(OF raw_0 - raw_&max_flag.);
103        		keep raw_all;
4                                                          The SAS System                                14:34 Friday, March 6, 2015

104        		run;
105        		data f.ds_2; set ds_2; run;
106        	%end;
107        	%else %do;
108        		data ds_2; set ds_1; keep raw_all; run;
109        	%end;
110        
111        	%put ~~~ maxh: &maxh. ~~~;
112        
113        	*** read data with cleaned string format from dictionary ***;
114        	data ds_3;
115        	set ds_2;
116        	%do i = 1 %to &maxvar.;
117        		format &&tmpvar&i &&fmt&i;
118        	%end;
119        	format level $1.;
120        	level = scan(raw_all,1,&default_dlm.,'m');
121        	if level='H' then do; 
122        	%do i = 1 %to &maxh.; hvar&i. = scan(raw_all,1+&i.,&default_dlm.,'m'); %end; end;
123        	else if level='R' then do; %do i = 1 %to &maxr.; rvar&i. = scan(raw_all,1+&i.,&default_dlm.,'m'); %end; end;
124        	else if level='I' then do; %do i = 1 %to &maxi.; ivar&i. = scan(raw_all,1+&i.,&default_dlm.,'m'); %end; end;
125        	else if level='M' then do; %do i = 1 %to &maxm.; mvar&i. = scan(raw_all,1+&i.,&default_dlm.,'m'); %end; end;
126        	else if level='P' then do; %do i = 1 %to &maxp.; pvar&i. = scan(raw_all,1+&i.,&default_dlm.,'m'); %end; end;
127        	else if level='A' then do; %do i = 1 %to &maxa.; avar&i. = scan(raw_all,1+&i.,&default_dlm.,'m'); %end; end;
128        	else if level='L' then do; %do i = 1 %to &maxl.; lvar&i. = scan(raw_all,1+&i.,&default_dlm.,'m'); %end; end;
129        	else if level='N' then do; %do i = 1 %to &maxn.; nvar&i. = scan(raw_all,1+&i.,&default_dlm.,'m'); %end; end;
130        	else if level='T' then do; %do i = 1 %to &maxt.; tvar&i. = scan(raw_all,1+&i.,&default_dlm.,'m'); %end; end;
131        	else do; put 'ERROR: Unknown Level Type ' level 'in Obs: ' _N_; end;
132        	if level^='I' & level^='M' then indi_idx=0;
133        	else if level='I' then indi_idx++1;
134        	else indi_idx++0;
135        	%do i = 1 %to &maxvar.;
136        		rename &&tmpvar&i = &&var&i;
137        	%end;
138        	call symputx("maxobs", _N_);
139        	drop raw_all;
140        	run;
141        	data f.ds_3; set ds_3; run;
142        	%put ~~~ Max Obs Read from File: &maxobs ~~~;
143        
144        	*** compare nobs with Batch Head ***;
145        	%if &obsnum^=&maxobs %then %do;
146        		%put "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";
147        		%put "ERROR: Observations Read from TXT File NOT Equal to Number Specified in Batch Header";
148        		%put "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";
149        	%end;
150        
151        
152        	*** split data into different level types sub datasets ***;
153        	data ds_h(keep=H_:) ds_r(keep=R_:) ds_i(keep=indi_idx I_:) ds_m(keep=indi_idx M_:)
154        		ds_p(keep=P_:) ds_a(keep=A_:) ds_l(keep=L_:) ds_n(keep=N_:) ds_t(keep=T_:);
155        	set ds_3;
156        	if level='H' then output ds_h;
157        	else if level='R' then output ds_r;
158        	else if level='I' then output ds_i;
159        	else if level='M' then output ds_m;
160        	else if level='P' then output ds_p;
161        	else if level='A' then output ds_a;
5                                                          The SAS System                                14:34 Friday, March 6, 2015

162        	else if level='L' then output ds_l;
163        	else if level='N' then output ds_n;
164        	else if level='T' then output ds_t;
165        	else do; 
166        		put 'ERROR: Unknown Level Type ' level 'in Obs: ' _N_; 
167        	end;
168        	run;
169        
170        
171        	*** combine I & M level ***;
172        	proc sort data=ds_i nodupkey; by I_Doc_Identifier indi_idx; run;
173        	proc sort data=ds_m nodupkey; by M_Doc_Identifier indi_idx; run;
174        	data ds_im;
175        	merge ds_i(in=a rename=(I_Doc_Identifier=Doc_Identifier)) ds_m(in=b rename=(M_Doc_Identifier=Doc_Identifier));
176        	by Doc_Identifier indi_idx;
177        	run;
178        
179        %mend import_single;
180        *%import_single(&txtds.DPL_IL_Cook_20150302.txt);

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           0.06 seconds
      cpu time            0.03 seconds
      
